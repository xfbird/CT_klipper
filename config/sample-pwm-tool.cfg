# This file contains an example configuration to use a PWM-controlled tool
# such as a laser or spindle.
# See docs/Using_PWM_Tools.md for a more detailed description.

[output_pin TOOL]
pin: !PIN       # use your fan's pin number
pwm: True
#hardware_pwm: True
# Using hardware PWM is optional.
cycle_time: 0.001
shutdown_value: 0
high_throughput: True
# This enables the high throughput mode.
# Suggested to only use on one output pin.

#maximum_mcu_duration: 5
#   Warning: The maximum mcu duration will _not_ yet
#   split long running moves.
#   This will lead to a shutdown if individual moves
#   do run longer.
# Default: 0 (disabled)
# Amount of time in which the host has to acknowledge
# a non-shutdown output value.
# Suggested value is around 5 seconds.
# Use a value that does not burn up your stock.
# Please note that during homing, your tool
# needs to be in default speed (off), or else the MCU will
# do a safety-shutdown.

[output_pin TOOL_ENABLE]
pin: !OTHER_PIN
shutdown_value: 0

[gcode_macro M3]
gcode:
    SET_PIN PIN=TOOL_ENABLE VALUE=1
    {% set S = params.S|default(0.0)|float %}
    SET_PIN PIN=TOOL VALUE={S / 255.0}

[gcode_macro M4]
gcode:
    SET_PIN PIN=TOOL_ENABLE VALUE=1
    {% set S = params.S|default(0.0)|float %}
    SET_PIN PIN=TOOL VALUE={S / 255.0}

[gcode_macro M5]
gcode:
    SET_PIN PIN=TOOL VALUE=0
    SET_PIN PIN=TOOL_ENABLE VALUE=0


# Optional: LCD Menu Control

[menu __main __control __toolonoff]
type: input
enable: {'output_pin TOOL' in printer}
name: Tool: {'ON ' if menu.input else 'OFF'}
input: {printer['output_pin TOOL'].value}
input_min: 0
input_max: 1
input_step: 1
gcode:
    SET_PIN PIN=TOOL_ENABLE VALUE={1 if menu.input else 0}

[menu __main __control __toolspeed]
type: input
enable: {'output_pin TOOL' in printer}
name: Tool speed: {'%3d' % (menu.input*100)}%
input: {printer['output_pin TOOL'].value}
input_min: 0
input_max: 1
input_step: 0.01
gcode:
    M3 S{'%d' % (menu.input*255)}
